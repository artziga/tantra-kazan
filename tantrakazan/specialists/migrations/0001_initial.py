# Generated by Django 5.0 on 2023-12-11 17:06

import specialists.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('listings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpecialistProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.BooleanField(blank=True, choices=[(True, 'Мужчина'), (False, 'Женщина')], null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, null=True, validators=[specialists.models.validate_age], verbose_name='Возраст')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Рост')),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Вес')),
                ('practice_start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала практики')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='широта')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='долгота')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('telegram_profile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телеграмм')),
                ('instagram_profile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Инстаграм')),
                ('description', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('is_profile_active', models.BooleanField(default=False)),
                ('basic_services', models.ManyToManyField(blank=True, to='listings.basicservice')),
                ('features', models.ManyToManyField(blank=True, to='listings.feature')),
                ('massage_for', models.ManyToManyField(related_name='specialists', related_query_name='specialist', to='listings.massagefor')),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
    ]
